source def_pqsql
{
    type = pgsql
    sql_host = $PGHOST
    sql_user = $PGUSER
    sql_pass = $PGPASS
    sql_port = 5432
    sql_query_pre = SET NAMES 'UTF8'
}

source src_swisssearch : def_pqsql
{
    sql_db = search
    sql_attr_bigint = id
    sql_attr_uint = rank
    sql_attr_string = label
    sql_attr_string = origin
    sql_attr_string = geom_st_box2d
    sql_field_string = geom_quadindex
    sql_field_string = detail
}

source src_address : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , strname1||' '||deinr||' <b>'||plz||' '||ort_27||'</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'address'
}

source src_parcel : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , gemname||' '||name as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'parcel'
}

source src_sn25 : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , '<b>'||name||'</b> ('||kanton||') - '||gemname as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'sn25'
}

source src_gg25 : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , '<b>'||gemname||' ('||kanton||')</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'gg25'
}

source src_kantone : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , remove_accents(search_name) as detail \
        , '<b>'||name||'</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'kantone'
}

source src_district : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , '<b>'||name||'</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'district'
}

source src_zipcode : src_swisssearch
{
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , '<b>'||plz||' - '||ort_27||' ('||kanton||')</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'zipcode'
}

source layers : def_pgsql
{
    sql_db = bod
    sql_attr_bigint = id
    sql_attr_string = lang
    sql_attr_string = origin
    sql_attr_string = label
    sql_field_string = staging
    sql_field_string = topics
    sql_field_string = layer
    sql_field_string = detail
}

source src_layers_de : layers
{
    sql_query = \
        SELECT \
            bgdi_id::bigint as id \
            , '<b>'||kurzbezeichnung||'</b>' as label \
            , 'layer' as origin \
            , volltextsuche as detail \
            , bod_layer_id as layer \
            , 'de' as lang \
            , projekte as topics \
            , staging as staging \
            , bgdi_id::bigint as id \
        from re3.view_bod_layer_info_de
}

source src_layers_fr : layers
{
    sql_query = \
        SELECT \
            bgdi_id::bigint as id \
            , '<b>'||kurzbezeichnung||'</b>' as label \
            , 'layer' as origin \
            , volltextsuche as detail \
            , bod_layer_id as layer \
            , 'fr' as lang \
            , projekte as topics \
            , staging as staging \
            , bgdi_id::bigint as id \
        from re3.view_bod_layer_info_fr
}

source src_layers_en : layers
{
    sql_query = \
        SELECT \
            bgdi_id::bigint as id \
            , '<b>'||kurzbezeichnung||'</b>' as label \
            , 'layer' as origin \
            , volltextsuche as detail \
            , bod_layer_id as layer \
            , 'en' as lang \
            , projekte as topics \
            , staging as staging \
            , bgdi_id::bigint as id \
        from re3.view_bod_layer_info_en
}

source src_layers_it : layers
{
    sql_query = \
        SELECT \
            bgdi_id::bigint as id \
            , '<b>'||kurzbezeichnung||'</b>' as label \
            , 'layer' as origin \
            , volltextsuche as detail \
            , bod_layer_id as layer \
            , 'it' as lang \
            , projekte as topics \
            , staging as staging \
            , bgdi_id::bigint as id \
        from re3.view_bod_layer_info_it
}

source src_layers_rm : layers
{
    sql_query = \
        SELECT \
            bgdi_id::bigint as id \
            , '<b>'||kurzbezeichnung||'</b>' as label \
            , 'layer' as origin \
            , volltextsuche as detail \
            , bod_layer_id as layer \
            , 'rm' as lang \
            , projekte as topics \
            , staging as staging \
            , bgdi_id::bigint as id \
        from re3.view_bod_layer_info_rm
}

source src_ch_astra_ivs-nat : def_pqsql
{
    sql_db = uvek
    sql_query = \
        SELECT \
            nat_id::bigint as id \
            , ivs_slaname as label \
            , 'feature' as origin \
            , remove_accents(ivs_slaname)||' '||remove_accents(ivs_nummer)||' '||remove_accents(ivs_signatur) as detail \
            , 'ch.astra.ivs-nat' as layer \
            , quadindex(the_geom) as geom_quadindex \
            , st_box2d(the_geom) as geom_st_box2d   \
            , nat_id::bigint as id \
        from astra.ivs_nat
    sql_attr_bigint = id
    sql_attr_string = origin
    sql_attr_string = layer
    sql_attr_string = geom_st_box2d
    sql_field_string = geom_quadindex
    sql_field_string = detail 
}

source src_ch_astra_ivs-reg_loc
{
    sql_db = uvek
    sql_query = \
        SELECT reg_loc_id::bigint as id \
            , ivs_slaname as label \
            , 'feature' as origin \
            , remove_accents(ivs_slaname)||' '||remove_accents(ivs_nummer)||' '||remove_accents(ivs_signatur) as detail \
            , 'ch.astra.ivs-reg_loc' as layer \
            , quadindex(the_geom) as geom_quadindex \
            , st_box2d(the_geom) as geom_st_box2d \
            , reg_loc_id::bigint as id \
        from astra.ivs_reg_loc
    sql_attr_bigint = id
    sql_attr_string = origin
    sql_attr_string = layer
    sql_attr_string = geom_st_box2d
    sql_field_string = geom_quadindex
    sql_field_string = detail
}


source src_ch_bfs_gebaeude_wohnungs_register
{
    sql_db = search
    sql_query = \
        SELECT \
        gid as id \
        , search_name as detail \
        , strname1||' '||deinr||' <b>'||plz||' '||ort_27||'</b>' as label \
        , origin as origin \
        , quadindex(the_geom) as geom_quadindex \
        , st_box2d(the_geom) as geom_st_box2d \
        , rank as rank \
        , gid as id \
        from swiss_search \
        where origin = 'address'
    sql_attr_bigint = id
    sql_attr_uint = rank
    sql_attr_string = label
    sql_attr_string = origin
    sql_attr_string = geom_st_box2d
    sql_field_string = geom_quadindex
    sql_field_string = detail
}



index zipcode
{
    source = src_zipcode
    path = /var/lib/sphinxsearch/data/zipcode
    type = plain
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index district : zipcode
{
    source = src_district
    path = /var/lib/sphinxsearch/data/district
}

index kantone : zipcode
{
    source = src_kantone
    path = /var/lib/sphinxsearch/data/kantone
}

index gg25 : zipcode
{
    source = src_gg25
    path = /var/lib/sphinxsearch/data/gg25
}

index sn25 : zipcode
{
    source = src_sn25
    path = /var/lib/sphinxsearch/data/sn25
}

index parcel : zipcode
{
    source = src_parcel
    path = /var/lib/sphinxsearch/data/parcel
}

index address : zipcode
{
    source = src_address
    path = /var/lib/sphinxsearch/data/address
}

index address_fuzzy : zipcode
{
    source = src_address
    path = /var/lib/sphinxsearch/data/address
    morphology            = soundex, metaphone
}

index swisssearch
{
    type = distributed
    local = zipcode
    local = district
    local = kantone
    local = gg25
    local = sn25
    local = parcel
    local = address
    local = address_fuzzy
}

index layers_de
{
    type = plain
    source = src_layers_de
    path = /var/lib/sphinxsearch/data/layers_de
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index layers_fr
{
    type = plain
    source = src_layers_fr
    path = /var/lib/sphinxsearch/data/layers_fr
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index layers_en
{
    type = plain
    source = src_layers_en
    path = /var/lib/sphinxsearch/data/layers_en
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index layers_it
{
    type = plain
    source = src_layers_it
    path = /var/lib/sphinxsearch/data/layers_it
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index layers_rm
{
    type = plain
    source = src_layers_rm
    path = /var/lib/sphinxsearch/data/layers_rm
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index ch_astra_ivs-nat
{
    type = plain # Which is also the default value
    source = src_ch_astra_ivs-nat
    path = /var/lib/sphinxsearch/data/ch_astra_ivs-nat
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index ch_astra_ivs-reg_loc
{
    type = plain # Which is also the default value
    source = src_ch_astra_ivs-reg_loc
    path = /var/lib/sphinxsearch/data/ch_astra_ivs-reg_loc
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}

index ch_bfs_gebaeude_wohnungs_register
{
    type = plain # Which is also the default value
    source = src_ch_bfs_gebaeude_wohnungs_register
    path = /var/lib/sphinxsearch/data/ch.bfs.gebaeude_wohnungs_register
    docinfo = extern
    charset_type = utf-8
    enable_star = 1
}


indexer
{
    mem_limit = 512M
    max_iosize = 1048576
}

searchd
{
    port = 9312
    log = /var/log/sphinxsearch/searchd.log
    query_log = /var/log/sphinxsearch/query.log
    pid_file = /var/run/sphinxsearch/searchd.pid
    dist_threads = 3
    read_timeout = 5
    max_children = 90
    max_matches = 10000
}
