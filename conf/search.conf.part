## SOURCES

source src_swisssearch : def_pqsql
{
    sql_attr_uint = num
    sql_attr_uint = rank
    sql_attr_string = label
    sql_attr_string = feature_id
    sql_attr_string = featureId
    sql_attr_string = origin
    sql_attr_string = geom_st_box2d
    sql_attr_float = x
    sql_attr_float = y
    sql_field_string = detail
}

source src_address : src_swisssearch
{
    sql_db=kogis
    sql_query = \
        SELECT id \
        , feature_id \
        , feature_id as featureId \
        , detail \
        , label \
        , origin \
        , geom_st_box2d \
        , 6::integer as rank \
        , x \
        , y \
        , num \
        FROM bfs.adressen_sphinx
}

source src_parcel : src_swisssearch
{
    sql_db=dritte
    sql_query = \
        SELECT id \
        , NULL::text as feature_id \
        , NULL::text as featureId \
        , detail \
        , label \
        , origin \
        , geom_st_box2d \
        , 10::integer as rank \
        , x \
        , y \
        , num \
        from kantone.parzellen_sphinx
}

source src_sn25 : src_swisssearch
{
    sql_db=stopo
    sql_query = \
        SELECT \
        objectid as id \
        , NULL::text as feature_id \
        , NULL::text as featureId \
        , remove_accents(coalesce(name,'')||' '||coalesce(kanton,''))::text as detail \
        , '<b>'||coalesce(name,'')||'</b> ('||coalesce(kanton,'')||') - '||coalesce(gemname,'') as label  \
        , 'sn25'::text as origin \
        , st_box2d(the_geom) as geom_st_box2d \
        , 5::integer as rank \
        , y((the_geom)) as x \
        , x((the_geom)) as y \
        , 1 as num \
        FROM tlm.swissnames_sn25_und_tlm
}

source src_gg25 : src_swisssearch
{
    sql_db=stopo
    sql_query = \
        SELECT \
        row_number() OVER(ORDER BY id asc) as id \
        , id::text as feature_id \
        , id::text as featureId \
        , remove_accents(gemname||' '||k.ak)::text as detail \
        , '<b>'||coalesce(gemname,'')||' ('||coalesce(k.ak,'')||')</b>' as label \
        , 'gg25'::text as origin \
        , st_box2d(g.the_geom) as geom_st_box2d \
        , 2::integer as rank \
        , y(ST_PointOnSurface(g.the_geom)) AS x \
        , x(ST_PointOnSurface(g.the_geom)) AS y \
        , 1 as num \
        FROM tlm.swissboundaries_gemeinden_uebersetzt g left join tlm.swissboundaries_kantone k on k.kantonsnr = g.kantonsnr 
}

source src_kantone : src_swisssearch
{
    sql_db=stopo
    sql_query = \
        SELECT \
        kantonsnr::integer as id \
        , kantonsnr::text as feature_id \
        , kantonsnr::text as featureId \
        , remove_accents(name ||' '||ak) as detail \
        , '<b>'||name||'</b>' as label \
        , 'kantone'::text as origin \
        , st_box2d(the_geom) as geom_st_box2d \
        , 4 as rank \
        , y(ST_PointOnSurface(the_geom)) AS x \
        , x(ST_PointOnSurface(the_geom)) AS y \
        , 1 as num \
         FROM tlm.swissboundaries_kantone
}


source src_district : src_swisssearch
{
    sql_db=stopo
    sql_query = \
        SELECT \
        id::integer as id \
        , id::text as feature_id \
        , id::text as featureId \
        , name::text as detail \
        , '<b>'||name||'</b>' as label \
        , 'district'::text as origin \
        , st_box2d(the_geom) as geom_st_box2d \
        , 3::integer as rank \
        , y(ST_PointOnSurface(the_geom)) AS x \
        , x(ST_PointOnSurface(the_geom)) AS y \
        , 1 as num \
        FROM tlm.swissboundaries_bezirke 
}

source src_zipcode : src_swisssearch
{
    sql_db=stopo
    sql_query = \
        SELECT \
        gid as id \
        , os_uuid::text as feature_id \
        , os_uuid::text as featureId \
        , plz::text as detail \
        , '<b>'||coalesce(plz::text,'')||' - '||coalesce(langtext,'')||' ('||coalesce((SELECT ak from tlm.swissboundaries_kantone k where st_intersects(ST_PointOnSurface(p.the_geom),k.the_geom)),'')||')</b>' as label \
        , 'zipcode' as origin \
        , st_box2d(the_geom) as geom_st_box2d\
        , 1 as rank \
        , y(ST_PointOnSurface(the_geom)) AS x \
        , x(ST_PointOnSurface(the_geom)) AS y \
        , 1 as num \
        FROM vd.gabmo_plz p
}

## INDICES

index zipcode
{
    source = src_zipcode
    path = /var/lib/sphinxsearch/data/index/zipcode
    type = plain
    docinfo = extern
    charset_type = utf-8
    min_infix_len = 1
    infix_fields = detail
    enable_star = 1
    ondisk_dict = 0
    preopen = 1
}

index district : zipcode
{
    source = src_district
    path = /var/lib/sphinxsearch/data/index/district
}

index kantone : zipcode
{
    source = src_kantone
    path = /var/lib/sphinxsearch/data/index/kantone
}

index gg25 : zipcode
{
    source = src_gg25
    path = /var/lib/sphinxsearch/data/index/gg25
}

index sn25 : zipcode
{
    source = src_sn25
    path = /var/lib/sphinxsearch/data/index/sn25
}

index parcel : zipcode
{
    source = src_parcel
    path = /var/lib/sphinxsearch/data/index/parcel
}

index address : zipcode
{
    source = src_address
    path = /var/lib/sphinxsearch/data/index/address
}

# only create on demand
#index address_geocoding : zipcode
#{
#    source = src_address_geocoding
#    path = /var/lib/sphinxsearch/data/index/address_geocoding
#}

index swisssearch
{
    type = distributed
    local = zipcode
    local = district
    local = kantone
    local = gg25
    local = sn25
    local = parcel
    local = address
}

